import ntpath
from multiprocessing import Pool
from optparse import OptionParser
import subprocess as sub
import os
import sys
import pandas as pd
import optparse
import shutil

parser = OptionParser()
parser.add_option("-i", "--inputfile", dest="inputfilename")
parser.add_option("-o", "--outputfile", dest="outputfilename")
(options, args) = parser.parse_args()

input_file_list = options.inputfilename
ouput_file_list = options.outputfilename


def copy_file(file_list):
    
	counter = 0
	
	tmp = ouput_file_list
    
	try:
		for file_name in file_list:
			file_path = file_name.rstrip() # remove the newlines or else !!!
			new_file_name = ntpath.basename(file_path)
			if (os.path.isfile(file_path)):
				shutil.copyfile(file_path, tmp + new_file_name)
				counter += 1
			
			if (counter % 100) == 0: # print progress
				print (counter)
	except Exception as e:
		print(e)
 


def run_copy_processes(tfiles):
    # Spawn worker processes.
    
    quart = int(len(tfiles)/4)
    train1 = tfiles[:quart]
    train2 = tfiles[quart:(2*quart)]
    train3 = tfiles[(2*quart):(3*quart)]
    train4 = tfiles[(3*quart):]

    print("Files: {:d} - {:d} - {:d}".format(len(tfiles), quart, (len(train1)+len(train2)+len(train3)+len(train4))))

    trains = [train1, train2, train3, train4]
    p = Pool(4)
    p.map(copy_file, trains)
    
    return

if __name__ == '__main__':

	if input_file_list != None:
		
		fip = open(input_file_list)
		file_list = fip.readlines()
		fip.close()
		
		for idx, fname in enumerate(file_list):
			file_list[idx] = fname
		
		run_copy_processes(file_list)
			


    